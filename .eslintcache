[{"/Users/dipmallakhani/Desktop/todo-react-typescript/src/reportWebVitals.ts":"1","/Users/dipmallakhani/Desktop/todo-react-typescript/src/App.tsx":"2","/Users/dipmallakhani/Desktop/todo-react-typescript/src/index.tsx":"3","/Users/dipmallakhani/Desktop/todo-react-typescript/src/components/Itemlist.tsx":"4","/Users/dipmallakhani/Desktop/todo-react-typescript/src/components/SingleItem.tsx":"5","/Users/dipmallakhani/Desktop/todo-react-typescript/src/components/DownloadBtn.tsx":"6"},{"size":425,"mtime":1606355092225,"results":"7","hashOfConfig":"8"},{"size":1781,"mtime":1606369413757,"results":"9","hashOfConfig":"8"},{"size":458,"mtime":1606361498331,"results":"10","hashOfConfig":"8"},{"size":544,"mtime":1606367468352,"results":"11","hashOfConfig":"8"},{"size":1283,"mtime":1606368963681,"results":"12","hashOfConfig":"8"},{"size":743,"mtime":1606370019919,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kl6nwl",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dipmallakhani/Desktop/todo-react-typescript/src/reportWebVitals.ts",[],"/Users/dipmallakhani/Desktop/todo-react-typescript/src/App.tsx",["27"],"import React, { useEffect, useRef, useState } from 'react';\nimport ItemList from './components/Itemlist';\nimport './App.css'\nimport { doesNotReject } from 'assert';\nimport DownloadBtn from './components/DownloadBtn';\n\nexport interface Item{\n  itemName?:string,\n  done?:boolean\n}\n\nconst App:React.FC = () =>{\n  const [item,setItem] = useState<Item | null>(null)\n  const [itemList,setItemList] = useState<Item[]|null>([])\n  const inputref = useRef(null)\n\n  const handleItemAddition = ()=>{\n    if(inputref.current.value){\n    setItemList(oldItem=>[...oldItem,item])\n    setItem(null)\n    inputref.current.value = \"\"\n    }\n    }\n\n  const handleDone = (index:number) =>{\n    setItemList(itemList.map((item,i)=>{\n      return i===index?{...item,done:!item.done}:item\n    }))\n  }\n\n  const handleRemove = (index:number) =>{\n    setItemList(itemList.filter((item,i)=>{\n      return i!==index\n    }))\n  }\n\n  useEffect(()=>{\nconsole.log(itemList)\n  },[itemList])\n\n\n  return <div className=\"flex flex-col w-400 mt-4\">\n  <div className=\"w-full flex flex-row\">\n    <input ref={inputref} value={item?.itemName} placeholder=\"Add Todo Item\" onChange={e=>setItem({itemName:e.target.value,done:false})} className=\" block w-full h-12 px-4 py-3 text-base appearance-none border-2 border-gray-300 shadow-none bg-white rounded-md placeholder-gray-500 focus:outline-none focus:shadow-outline-blue focus:border-purple-300\"/>\n    <button onClick={handleItemAddition} className=\"ml-2 h-12 block border border-transparent px-6 py-3 text-base font-semibold bg-purple-500 text-white rounded-md shadow-md hover:bg-purple-600\">ADD</button>\n    </div>\n    <ItemList itemList={itemList} handleDone={handleDone} handleRemove={handleRemove}/>\n    <DownloadBtn itemList={itemList}/>\n    </div>;\n}\n\nexport default App;","/Users/dipmallakhani/Desktop/todo-react-typescript/src/index.tsx",[],"/Users/dipmallakhani/Desktop/todo-react-typescript/src/components/Itemlist.tsx",[],"/Users/dipmallakhani/Desktop/todo-react-typescript/src/components/SingleItem.tsx",[],"/Users/dipmallakhani/Desktop/todo-react-typescript/src/components/DownloadBtn.tsx",[],{"ruleId":"28","severity":1,"message":"29","line":4,"column":10,"nodeType":"30","messageId":"31","endLine":4,"endColumn":23},"@typescript-eslint/no-unused-vars","'doesNotReject' is defined but never used.","Identifier","unusedVar"]